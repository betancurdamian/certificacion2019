/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.betancur.view;

import com.betancur.view.resources.ValidadorDeCampos;
import com.betancur.vo.DisciplinaVO;
import com.betancur.vo.AspiranteVO;
import com.betancur.Aspirante;
import com.betancur.Disciplina;

import com.toedter.calendar.JTextFieldDateEditor;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Ariel
 */
public class UINuevoAspirante extends javax.swing.JDialog {

    private final UIRegistrarAspirante pantallaPadre;
    private ValidadorDeCampos validador;

    /**
     * Creates new form UINuevoAspirante
     *
     * @param parent
     * @param modal
     */
    public UINuevoAspirante(UIRegistrarAspirante parent, boolean modal) {
        super(parent, modal);
        pantallaPadre = parent;
        setTitle("Nuevo Aspirante");

        initComponents();
        buttonGroup_sexo.add(jrbtn_femenino);
        buttonGroup_sexo.add(jrbtn_masculino);

        this.validador = new ValidadorDeCampos();

        //validador de campos        
        validador.validarSoloLetras(jtf_nombres);
        validador.LimitarCaracteres(jtf_nombres, 50);

        validador.validarSoloLetras(jtf_apellido);
        validador.LimitarCaracteres(jtf_apellido, 50);

        validador.LimitarCaracteres(jtf_direccion, 50);

        validador.validarSoloNumero(jtf_dni);
        validador.LimitarCaracteres(jtf_dni, 8);

        //Evitar edicion manual de fecha
        JTextFieldDateEditor editor = (JTextFieldDateEditor) jdc_fechaDeNacimiento.getDateEditor();
        editor.setEditable(false);

        this.jrbtn_femenino.setSelected(true);
        this.jtf_nombres.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_sexo = new javax.swing.ButtonGroup();
        jPanel_nuevoAspirante = new javax.swing.JPanel();
        jbtn_aceptar = new javax.swing.JButton();
        jbtn_cancelar = new javax.swing.JButton();
        jlbl_nombres = new javax.swing.JLabel();
        jtf_nombres = new javax.swing.JTextField();
        jtf_apellido = new javax.swing.JTextField();
        jtf_direccion = new javax.swing.JTextField();
        jlbl_apellido = new javax.swing.JLabel();
        jlbl_direccion = new javax.swing.JLabel();
        jlbl_fechaDeNacimiento = new javax.swing.JLabel();
        jrbtn_femenino = new javax.swing.JRadioButton();
        jrbtn_masculino = new javax.swing.JRadioButton();
        jlbl_sexo = new javax.swing.JLabel();
        jtf_dni = new javax.swing.JTextField();
        jlbl_dni = new javax.swing.JLabel();
        jdc_fechaDeNacimiento = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jbtn_aceptar.setText("Aceptar");
        jbtn_aceptar.setEnabled(false);
        jbtn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_aceptarActionPerformed(evt);
            }
        });

        jbtn_cancelar.setText("Cancelar");
        jbtn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_cancelarActionPerformed(evt);
            }
        });

        jlbl_nombres.setText("Nombres: ");

        jtf_nombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_nombresKeyReleased(evt);
            }
        });

        jtf_apellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_apellidoKeyReleased(evt);
            }
        });

        jtf_direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_direccionKeyReleased(evt);
            }
        });

        jlbl_apellido.setText("Apellido");

        jlbl_direccion.setText("Direcci√≥n");

        jlbl_fechaDeNacimiento.setText("Fecha de Nacimiento");

        jrbtn_femenino.setText("Femenino");
        jrbtn_femenino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jrbtn_femeninoKeyReleased(evt);
            }
        });

        jrbtn_masculino.setText("Masculino");
        jrbtn_masculino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jrbtn_masculinoKeyReleased(evt);
            }
        });

        jlbl_sexo.setText("Sexo");

        jtf_dni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtf_dniKeyReleased(evt);
            }
        });

        jlbl_dni.setText("DNI");

        jdc_fechaDeNacimiento.setDoubleBuffered(false);
        jdc_fechaDeNacimiento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdc_fechaDeNacimientoPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel_nuevoAspiranteLayout = new javax.swing.GroupLayout(jPanel_nuevoAspirante);
        jPanel_nuevoAspirante.setLayout(jPanel_nuevoAspiranteLayout);
        jPanel_nuevoAspiranteLayout.setHorizontalGroup(
            jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_nuevoAspiranteLayout.createSequentialGroup()
                .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_nuevoAspiranteLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbl_nombres)
                            .addComponent(jlbl_apellido)
                            .addComponent(jlbl_direccion)
                            .addComponent(jlbl_fechaDeNacimiento)
                            .addComponent(jlbl_sexo)
                            .addComponent(jlbl_dni))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel_nuevoAspiranteLayout.createSequentialGroup()
                                .addComponent(jrbtn_femenino)
                                .addGap(18, 18, 18)
                                .addComponent(jrbtn_masculino))
                            .addComponent(jtf_direccion)
                            .addComponent(jtf_apellido)
                            .addComponent(jtf_nombres, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(jtf_dni)
                            .addComponent(jdc_fechaDeNacimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel_nuevoAspiranteLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(jbtn_aceptar)
                        .addGap(18, 18, 18)
                        .addComponent(jbtn_cancelar)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel_nuevoAspiranteLayout.setVerticalGroup(
            jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_nuevoAspiranteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbl_nombres)
                    .addComponent(jtf_nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbl_apellido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbl_direccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbl_fechaDeNacimiento)
                    .addComponent(jdc_fechaDeNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbtn_femenino)
                    .addComponent(jrbtn_masculino)
                    .addComponent(jlbl_sexo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbl_dni))
                .addGap(18, 18, 18)
                .addGroup(jPanel_nuevoAspiranteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_aceptar)
                    .addComponent(jbtn_cancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        //Mi JDateChooser es llamado JD_Fecha

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_nuevoAspirante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_nuevoAspirante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_cancelarActionPerformed

        /**
         * verifica sobre la lista de nuevos aspirantes
         */
        if (pantallaPadre.getAspirantes().isEmpty()) {
            this.dispose();
            pantallaPadre.getTablaEscuelas().setEnabled(true);
        } else {
            this.dispose();
            pantallaPadre.getTablaEscuelas().setEnabled(false);

            //posiciona las tablas en el primer registro
            pantallaPadre.seleccionarTablas(0);

            //setea los registros a recorrer
            pantallaPadre.setRegistrosTotalesDeAspirantes(pantallaPadre.getAspirantes().size());
            //Setea el primer registro
            pantallaPadre.setRegistroActualDeAspirante(0);

            pantallaPadre.modificarDisciplinas(pantallaPadre.getAspiranteSeleccionadoVO());

        }
    }//GEN-LAST:event_jbtn_cancelarActionPerformed

    private void jbtn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_aceptarActionPerformed
        /**
         * ---------------------------------------------------------------------
         * Creaci√≥n del aspirante auxiliar
         */
        Aspirante aspiranteAuxiliar = new Aspirante();
        //Escuela seleccionada desde el controlador
        aspiranteAuxiliar.setEscuela(pantallaPadre.getControlador().getEscuelaEncontrada());
        aspiranteAuxiliar.setNombres(jtf_nombres.getText());
        aspiranteAuxiliar.setApellido(jtf_apellido.getText());
        aspiranteAuxiliar.setDireccion(jtf_direccion.getText());
        aspiranteAuxiliar.setFechaDeNacimiento(jdc_fechaDeNacimiento.getDate());

        if (jrbtn_femenino.isSelected()) {
            aspiranteAuxiliar.setSexo(true);
        }
        if (jrbtn_masculino.isSelected()) {
            aspiranteAuxiliar.setSexo(false);
        }
        aspiranteAuxiliar.setDni(jtf_dni.getText());

        //agregar categoria del aspirante segun la edad
        pantallaPadre.getControlador().asignarCategoria(aspiranteAuxiliar);

        //crea nuevo aspirante con arraylist de disciplinas inscriptas
        AspiranteVO nuevoAspiranteVO = new AspiranteVO(aspiranteAuxiliar);

        //Agregar las disciplinas por defecto
        asignarDisciplinasPorDefecto(nuevoAspiranteVO);

        //Agrega al aspirante a la tabla
        pantallaPadre.agregarAspiranteATabla(nuevoAspiranteVO);

        //Hace foco en el jTextField nombres
        this.jtf_nombres.requestFocus();

        //Limpia todos los campos para el ingreso de un nuevo aspirante
        limpiar();
        jbtn_aceptar.setEnabled(false);
    }//GEN-LAST:event_jbtn_aceptarActionPerformed

    /*
     *--------------------------------------------------------------------------
     *----------------Escuchadores de campos de texto---------------------------
     *--------------------------------------------------------------------------
     */
    
    private void jtf_nombresKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_nombresKeyReleased
        habilitarBotonAceptar();
    }//GEN-LAST:event_jtf_nombresKeyReleased

    private void jtf_apellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_apellidoKeyReleased
        habilitarBotonAceptar();
    }//GEN-LAST:event_jtf_apellidoKeyReleased

    private void jtf_direccionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_direccionKeyReleased
        habilitarBotonAceptar();
    }//GEN-LAST:event_jtf_direccionKeyReleased

    private void jrbtn_femeninoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrbtn_femeninoKeyReleased
        habilitarBotonAceptar();
    }//GEN-LAST:event_jrbtn_femeninoKeyReleased

    private void jrbtn_masculinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrbtn_masculinoKeyReleased
        habilitarBotonAceptar();
    }//GEN-LAST:event_jrbtn_masculinoKeyReleased

    private void jtf_dniKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_dniKeyReleased
        habilitarBotonAceptar();
    }//GEN-LAST:event_jtf_dniKeyReleased

    /**
     * Verifica la fecha ingresada dentro del rango de edad 6 a√±os a 17 a√±os
     *
     * @param evt
     */
    private void jdc_fechaDeNacimientoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdc_fechaDeNacimientoPropertyChange
        int edad = 0;
        Date date;
        date = jdc_fechaDeNacimiento.getDate();
        if (date != null) {
            habilitarBotonAceptar();
            edad = validador.calcularEdad(date) + 1;
            if ((edad >= 6) && (edad <= 17)) {
            } else {
                JOptionPane.showConfirmDialog(this, "              La fecha ingresada es " + edad + " a√±os \n"
                        + "tiene que estar dentro del rango de 6 a√±os a 17 a√±os \n"
                        + "             modifique la fecha por favor", "Aceptar", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE);

                this.jdc_fechaDeNacimiento.setCalendar(null);
            }
        } else {
            habilitarBotonAceptar();
        }
    }//GEN-LAST:event_jdc_fechaDeNacimientoPropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_sexo;
    private javax.swing.JPanel jPanel_nuevoAspirante;
    private javax.swing.JButton jbtn_aceptar;
    private javax.swing.JButton jbtn_cancelar;
    private com.toedter.calendar.JDateChooser jdc_fechaDeNacimiento;
    private javax.swing.JLabel jlbl_apellido;
    private javax.swing.JLabel jlbl_direccion;
    private javax.swing.JLabel jlbl_dni;
    private javax.swing.JLabel jlbl_fechaDeNacimiento;
    private javax.swing.JLabel jlbl_nombres;
    private javax.swing.JLabel jlbl_sexo;
    private javax.swing.JRadioButton jrbtn_femenino;
    private javax.swing.JRadioButton jrbtn_masculino;
    private javax.swing.JTextField jtf_apellido;
    private javax.swing.JTextField jtf_direccion;
    private javax.swing.JTextField jtf_dni;
    private javax.swing.JTextField jtf_nombres;
    // End of variables declaration//GEN-END:variables

    private void limpiar() {
        this.jtf_nombres.setText("");
        this.jtf_apellido.setText("");
        this.jtf_direccion.setText("");
        this.jdc_fechaDeNacimiento.setCalendar(null);
        this.jrbtn_femenino.setSelected(true);
        this.jtf_dni.setText("");
        this.jtf_nombres.requestFocus();

    }

    private void habilitarBotonAceptar() {
        if ((!jtf_nombres.getText().isEmpty()) && (!jtf_apellido.getText().isEmpty()) && (!jtf_direccion.getText().isEmpty()) && (jdc_fechaDeNacimiento.getDate() != null) && (!jtf_dni.getText().isEmpty())) {

            jbtn_aceptar.setEnabled(true);
        } else {
            jbtn_aceptar.setEnabled(false);
        }
    }

    /**
     * Asigna disciplinas por defecto a un aspirante
     *
     * @param aspirante
     */
    private void asignarDisciplinasPorDefecto(AspiranteVO aspirante) {
        List<DisciplinaVO> disciplinasVO = new ArrayList<>();
        DisciplinaVO disciplinaVOAuxiliar;

        List<Disciplina> disciplinasTotales = pantallaPadre.getControlador().listarDisciplinas(pantallaPadre.getTorneoActual());
        List<Disciplina> disciplinasPorDefecto = pantallaPadre.getControlador().disciplinasPorDefecto(pantallaPadre.getTorneoActual());

        for (Disciplina disciplina : disciplinasTotales) {
            disciplinaVOAuxiliar = new DisciplinaVO();
            disciplinaVOAuxiliar.setDisciplina(disciplina);
            disciplinaVOAuxiliar.getDisciplina().setTorneo(pantallaPadre.getTorneoActual());
            disciplinaVOAuxiliar.setCategoria(aspirante.getAspirante().getCategoria());
            disciplinasVO.add(disciplinaVOAuxiliar);
        }

        for (Disciplina disciplina : disciplinasPorDefecto) {
            for (DisciplinaVO disciplinaVO : disciplinasVO) {
                if (disciplina.getNombre().equals(disciplinaVO.getDisciplina().getNombre())) {
                    disciplinaVO.setActivo(true);
                }
            }
        }
        aspirante.setDisciplinas(disciplinasVO);
    }

}
